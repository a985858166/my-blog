<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xin.inote.my.blog.web.admin.dao.TbUserDao">
    <sql id="tbUserColumns">
        a.id,
        a.username,
        a.password,
        a.screen_name AS screenName,
        a.email,
        a.created,
        a.updated
    </sql>
    <insert id="insert">
        INSERT INTO `tb_user`(
        `username`,
        `screen_name`,
        `password`,
        `email`,
        `created`,
        `updated`
        )
        VALUES(
        #{username},
        #{screenName},
        #{password},
        #{email},
        #{created},
        #{updated}
        )
    </insert>
    <update id="update">
        UPDATE `tb_user`
        SET
          `username` = #{username},
          `password` = #{password},
          `screen_name` = #{screenName},
          `email` = #{email},
          `created` = #{created},
          `updated` = #{updated}
        WHERE
	      `id` = #{id};
    </update>
    <delete id="delete">
        DELETE
        FROM
            tb_user
        WHERE
	        id = #{id}
    </delete>
    <delete id="deleteMulti"></delete>
    <select id="getById" resultType="xin.inote.my.blog.domain.TbUser">
        SELECT
          <include refid="tbUserColumns"/>
        FROM
           tb_user AS a
        WHERE
           id = #{id}
    </select>
    <select id="login" resultType="xin.inote.my.blog.domain.TbUser">
        SELECT
        <include refid="tbUserColumns"/>
        FROM
        tb_user AS a
        WHERE
        a.email = #{email}
    </select>
    <select id="selectAll" resultType="xin.inote.my.blog.domain.TbUser">
        SELECT
          <include refid="tbUserColumns"/>
        FROM
          tb_user AS a
    </select>
</mapper>